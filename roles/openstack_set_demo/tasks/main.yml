---

- name: download cloud images
  get_url:
    url: "{{ item }}"
    dest: "{{ url_image_path }}"
    mode: 0664
  with_items: "{{ image_url }}"

- name: Upload cloud images to openstack
  os_image:
    cloud: openstack
    name: cirros
    container_format: bare
    disk_format: qcow2
    state: present
    filename: "{{ image_filename }}"

- name: Create private demo network
  os_network:
    cloud: openstack
    name: demo_net
    state: present

- name: Create private demo subnet
  os_subnet:
    cloud: openstack
    name: demo_subnet
    allocation_pool_start: "{{ allocation_pool_start }}"
    allocation_pool_end: "{{ allocation_pool_end }}"
    cidr: "{{ cidr }}"
    dns_nameservers: "{{ dns_nameservers }}"
    enable_dhcp: True
    network_name: demo_net
    state: present
  register: subnet

- name: Create demo router and set gateway
  os_router:
    cloud: openstack
    name: router_demo
    network: public
    external_fixed_ips:
      - subnet: external_subnet
    state: present
  register: router1

#- name: Get exisiting ports on demo router 
#  os_port_facts:
#    cloud: openstack
#    filters:
#      device_id: "{{ router1.id }}"
#      status: ACTIVE
#      device_owner: network:router_ha_interface
#  tags: test

#- debug:
#   var: openstack_ports[0] #['fixed_ips'][0]['subnet_id']
#  tags: test

#- name: Add HA ports to demo router
#  tags: test
#  os_port:
#    state: present
#    name: "{{ openstack_ports[0]['name'] }}"
#    network: "{{ openstack_ports[0]['network_id'] }}"
#    cloud: openstack
#    device_id: "{{ openstack_ports[0]['device_id'] }}"
#    device_owner: "{{ openstack_ports[0]['device_owner'] }}"

#- name: Add private subnet ports to demo router
#  tags: test
#  os_port:
#    state: present
#    name: demo_subnet_router_interface
#    network: demo_net
#    device_id: "{{ router1.id }}"
#    device_owner: network:router_gateway
#    cloud: openstack
    

#    mac_address: "{{ openstack_ports[0]['mac_address'] }}"
#  os_port:
#    name: "{{ openstack_ports[1]['name'] }}"     
#    state: present
#    cloud: openstack
#
#  os_port:
#    name: "{{ openstack_ports[2]['name'] }}"     
#    state: present
#    cloud: openstack
#  tags: test







#- name: collect subnet facts
#  os_subnets_facts:
#    cloud: openstack
#    filters:
#      tenant_id: ""
#  tags: test 

#- debug:
#   var: openstack_subnets
#  tags: test

#- name: Add Interfaces to router
#  tags: test
#  os_router:
#    cloud: openstack
#    name: router_demo
#    interfaces: 
#      - "{{ openstack_subnets[0]['name'] }}"
#      - "{{ openstack_subnets[0]['name'] }}"
#      - "{{ openstack_subnets[0]['name'] }}"
#      - demo_subnet
#    state: present




#- name: Create demo router and set gateway
#  os_router:
#    cloud: openstack
#    name: router_demo
#    state: present
#    interfaces:
#       - demo_subnet



- name: Create security group
  os_security_group:
    cloud: openstack
    name: "{{ security_group_name }}"
    description: "This is a demo security group"
    state: present
  register: sec_group_check

- name: Add security group rules
  os_security_group_rule:
    cloud: openstack
    security_group: "{{ security_group_name }}"
    protocol: "{{ item.proto }}"
    port_range_min: "{{ item.port_min }}"
    port_range_max: "{{ item.port_max }}"
    remote_ip_prefix: '0.0.0.0/0'
    state: present
  with_items:
    - { proto: 'tcp', port_min: '22', port_max: '22' }
    - { proto: 'tcp', port_min: '80', port_max: '80' }
    - { proto: 'icmp', port_min: '-1', port_max: '-1' }
  when: sec_group_check.secgroup.name is defined and sec_group_check.secgroup.name == '{{ security_group_name }}'

- name: Create keypair
  tags: test
  os_keypair:
    cloud: openstack
    state: present
    name: ansible_test_key
  register: keypair 

- name: Create demo instance
  tags: test
  os_server:
    cloud: openstack
    name: "{{ instance_name }}"
    image: "{{ instance_image }}"
    flavor: "{{ instance_flavor }}"
    security_groups: "{{ security_group_name }}"
    key_name: "{{ keypair.key.name }}"
    timeout: 200
    nics:
      - net-name: demo_net
    state: present
  register: instance_create

- name: Add instance to the inventory
  add_host:
    name: "{{ instance_name }}"
    group: demo
    ansible_ssh_host: "{{ instance_create.server.addresses.demo_net[1].addr }}"
    ansible_ssh_user: "{{ instance_user }}"
    ansible_ssh_private_key_file: "{{ private_key }}"
  when: instance_create.changed

- name: Wait for instance to boot up
  pause:
    seconds: 20
